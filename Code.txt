
routes.py
-----------------------------------------------------------------------------
@main.route('/create_technology', methods=["GET", "POST"])
def create_technology():


    if request.method == 'POST':
        conn = sqlite3.connect("app.db")
        cur = conn.cursor()
        name = request.form['name']
        fähigkeit = request.form['fähigkeit0']
        a = request.form['a0']
        b = request.form['b0']
        c = request.form['c0']
        d = request.form['d0']
        daten = {'Technologie': [name], fähigkeit+'_a':[a], fähigkeit+'_b':[b], fähigkeit+'_c':[c], fähigkeit+'_d':[d]}

        dataframe = pd.DataFrame(data=daten)

        try:
            #set techname = name
            data = pd.read_sql_query("SELECT * FROM Technologien WHERE Technologie='"+name+"'", conn)
            data = data.loc[:,data.columns !='index']

            if data.empty:
                #dataframe1 = dataframe
                dataframe_all = pd.read_sql_query("SELECT * FROM Technologien", conn)
                dataframe_all = dataframe_all.loc[:, dataframe_all.columns != 'index']
                dataframe1 = pd.concat([dataframe_all, dataframe])
            else:
                if not fähigkeit+'_a' in data.columns:
                    dataframe = dataframe.loc[:, dataframe.columns != 'Technologie']
                    dataframe_row = pd.concat([data, dataframe], axis=1)
                    dataframe_all = pd.read_sql_query("SELECT * FROM Technologien WHERE Technologie!='"+name+"'", conn)
                    dataframe_all = dataframe_all.loc[:, dataframe_all.columns != 'index']
                    dataframe1 = pd.concat([dataframe_all, dataframe_row])
                    print(dataframe_all)
                else:
                    data.at[0, fähigkeit+'_a'] = a
                    data.at[0, fähigkeit + '_b'] = b
                    data.at[0, fähigkeit + '_c'] = c
                    data.at[0, fähigkeit + '_d'] = d
                    dataframe_all = pd.read_sql_query("SELECT * FROM Technologien WHERE Technologie!='"+name+"'", conn)
                    dataframe_all = dataframe_all.loc[:, dataframe_all.columns != 'index']
                    dataframe1 = pd.concat([dataframe_all, data])

            #dataframe_all = pd.read_sql_query("SELECT * FROM Technologien", conn)
            #dataframe_final = pd.concat([dataframe_all, dataframe1])
        except:
            dataframe1 = dataframe
            print("Erster Eintrag")

        cur.execute("DROP TABLE IF EXISTS Technologien;")

        print(dataframe1)
        #print(dataframe_all)
        #print(dataframe_final)

        dataframe1.to_sql(
            "Technologien",
            conn,
            schema=None,
            if_exists="replace",
            index=True,
            index_label=None,
            chunksize=None,
            dtype=None,
            method=None,
        )

        conn.commit()
        technology_row = pd.read_sql_query("SELECT * FROM Technologien WHERE Technologie='"+name+"'", conn)
        technology_matrix = pd.DataFrame()
        i = 2
        for j in range(0,(int((len(technology_row.columns)-2)/4))):  ##loc benutzen um von spalte x bis y zu iterieren
            j = i+4;
            technology_4_row = technology_row.iloc[:,i:j]  #column names müssen gelöscht werden damit man die einzelnen spalten untereinander führen kann
            technology_4_row.rename(columns={technology_4_row.columns[0]: 'a', technology_4_row.columns[1]: 'b', technology_4_row.columns[2]: 'c',technology_4_row.columns[3]: 'd'}, inplace=True)
            fähigkeit_name = technology_row.columns[i].replace("_a","")
            technology_4_row.rename(index={0:fähigkeit_name}, inplace=True)
            technology_matrix = pd.concat([technology_matrix,technology_4_row])
            i = j


        technology_matrix=technology_matrix.dropna()
        Tabelle = technology_matrix.to_html(classes="table table-hover")
        print(technology_matrix)

        conn.close()

    try:
        return render_template("main/create_technology.html", name = name,  Tabelle=[Tabelle])
    except:
        return render_template("main/create_technology.html")


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
create_technology.html
--------------------------------------------

{% extends 'base.html' %} {% block content %}
<style>
  .container-wrapper {
    background-color: rgba(0, 84, 159, 0.5);
    border-radius: 4px;
  }

  .table-container {
    background-color: white;
    border-radius: 4px;

  }

  .input-container {
    background-color: white;
    border-radius: 4px;
    width: auto;
  }
  .form-group input {
    width: auto;
  }
  table input {
    width: 50px;
  }

input { margin:  15px;
        width:    auto}

dataframe { background-color: white;
            border-radius: 4px;}
</style>
<script>
    function add_field()
    {
        var form = document.getElementsByTagName('form')[0];
        var counter = document.forms["input"]
        counter = counter.getElementsByTagName('input').length;
        counter = (counter-2)/5
        input1 = document.createElement('input');
        input2 = document.createElement('input');
        input3 = document.createElement('input');
        input4 = document.createElement('input');
        input5 = document.createElement('input');
        zeilensprung = document.createElement('br')


        tabelle = document.createElement('table');
        reihe = document.createElement('tr');

        input1.setAttribute('type', 'text');
        input1.setAttribute('name', "fähigkeit"+counter);
        input2.setAttribute('type', 'text');
        input2.setAttribute('name', "a"+counter);
        input3.setAttribute('type', 'text');
        input3.setAttribute('name', "b"+counter);
        input4.setAttribute('type', 'text');
        input4.setAttribute('name', "c"+counter);
        input5.setAttribute('type', 'text');
        input5.setAttribute('name', "d"+counter);

        form.appendChild(zeilensprung);
        form.appendChild(input1);
        form.appendChild(input2);
        form.appendChild(input3);
        form.appendChild(input4);
        form.appendChild(input5);
        form.appendChild(tabelle);
        form.appendChild(reihe);

    };
    var c = 11;
    document.getElementById("counter").value = c;
</script>
<body>


<div class="container container-wrapper">
    <form action="/main/create_technology" name="input" method="POST">
           <table class="table table-hover" border="3" align="center">
        <tr>
            {% if name is defined %}
            <th>Technologie: <input type="text" name="name" value="{{ name }}" readonly> </th>
            {% else %}
            <th>Technologie: <input type="text" name="name"> </th>
            {% endif %}

            <th>a</th>
            <th>b</th>
            <th>c</th>
            <th>d</th>
        </tr>

        <tr>

                <th><input type="text" name="fähigkeit0"></th>
                <th><input type="text" name="a0"></th>
                <th><input type="text" name="b0"></th>
                <th><input type="text" name="c0"></th>
                <th><input type="text" name="d0"></th>

        </tr>
           </table>
            <input type="submit" value="Technologie hinzufügen">
                  <input type="button" class="btn btn-primary btn-lg" name="button" value="Schließen"
            onclick="window.open(' /main/ft ', 'einNeuesFenster');">
              </form>





{% for Tabelle in Tabelle %}
    {{ Tabelle|safe }}

    {% endfor %}





      Position im Fertigungssystem:<input type="text" name="position" required>
    <br>



</div>
</div>
  </body>
{% endblock %}

-------------------------------------------------------------------------------------------------------------------------------------------------